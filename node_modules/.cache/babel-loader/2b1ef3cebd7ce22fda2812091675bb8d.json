{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport cartReducer from './components/reducers/cartReducer';\nimport { persistStore, persistReducer } from 'redux-persist'; // imports from redux-persist\n\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nvar rootReducer = combineReducers({\n  cart: cartReducer\n});\nvar persistConfig = {\n  // configuration object for redux-persist\n  key: 'rootReducer',\n  storage: storage // define which storage to use\n\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer); // create a persisted reducer\n\nvar store = createStore(persistedReducer, // pass the persisted reducer instead of rootReducer to createStore\napplyMiddleware() // add any middlewares here\n);\nvar persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nexport { store, persistor };","map":{"version":3,"sources":["D:\\workspace\\reactWorkSpace\\Shopping-Cart\\src\\store.js"],"names":["createStore","applyMiddleware","combineReducers","cartReducer","persistStore","persistReducer","storage","rootReducer","cart","persistConfig","key","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C,C,CAA6D;;AAC7D,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAEhD,IAAIC,WAAW,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,IAAI,EAAEL;AADwB,CAAD,CAAjC;AAKA,IAAMM,aAAa,GAAG;AAAE;AACpBC,EAAAA,GAAG,EAAE,aADa;AAElBJ,EAAAA,OAAO,EAAPA,OAFkB,CAET;;AAFS,CAAtB;AAKA,IAAMK,gBAAgB,GAAGN,cAAc,CAACI,aAAD,EAAgBF,WAAhB,CAAvC,C,CAAoE;;AAEpE,IAAMK,KAAK,GAAGZ,WAAW,CACrBW,gBADqB,EACH;AAClBV,eAAe,EAFM,CAEH;AAFG,CAAzB;AAKA,IAAMY,SAAS,GAAGT,YAAY,CAACQ,KAAD,CAA9B,C,CAAuC;;AAEvC,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport cartReducer from './components/reducers/cartReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nlet rootReducer = combineReducers({\r\n    cart: cartReducer\r\n});\r\n\r\n\r\nconst persistConfig = { // configuration object for redux-persist\r\n    key: 'rootReducer',\r\n    storage, // define which storage to use\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer) // create a persisted reducer\r\n\r\nconst store = createStore(\r\n    persistedReducer, // pass the persisted reducer instead of rootReducer to createStore\r\n    applyMiddleware() // add any middlewares here\r\n)\r\n\r\nconst persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\r\n\r\nexport { store, persistor }"]},"metadata":{},"sourceType":"module"}